package main

import (
	"encoding/xml"
	"fmt"
	"log"
)

type Person struct {
	XMLName xml.Name `xml:"person"`
	Name    string   `xml:"name"`
	Age     int      `xml:"age"`
	City    string   `xml:"city"`
	Email   string   `xml:"email"`
	Address Address  `xml:"address"`
}

type Address struct {
	City  string `xml:"city"`
	State string `xml:"state"`
}

type Book struct {
	XMLName xml.Name `xml:"book"`
	ISBN    string   `xml:"isbn,attr"`
	Title   string   `xml:"title,attr"`
	Author  string   `xml:"author,attr"`
}

func main() {
	person := Person{
		Name:  "John",
		Age:   30,
		City:  "London",
		Email: "example@test.com",
		Address: Address{
			City:  "Oakland",
			State: "CA",
		},
	}

	xmlData, err := xml.Marshal(person)
	if err != nil {
		log.Fatal("Error:", err)
	}

	fmt.Println(string(xmlData))

	xmlData, err = xml.MarshalIndent(person, "", " ")
	if err != nil {
		log.Fatal("Error:", err)
	}

	fmt.Println(string(xmlData))

	xmlRaw := `<person><name>John</name><age>30</age><address><city>San Franciso</city></address></person>`

	var personxml Person
	xml.Unmarshal([]byte(xmlRaw), &personxml)
	if err != nil {
		log.Fatal("Error:", err)
	}

	fmt.Println(personxml)

	book := Book{
		ISBN:   "584-34-2142-3213-231",
		Title:  "Go Run",
		Author: "Test",
	}

	xmlDataAttr, err := xml.MarshalIndent(book, "", " ")
	if err != nil {
		log.Fatal("Error:", err)
	}

	fmt.Println(string(xmlDataAttr))
}
